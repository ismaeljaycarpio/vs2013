#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbAMS")]
	public partial class eHRISContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertEvaluationLINQ(EvaluationLINQ instance);
    partial void UpdateEvaluationLINQ(EvaluationLINQ instance);
    partial void DeleteEvaluationLINQ(EvaluationLINQ instance);
    partial void InsertEvaluation_Score(Evaluation_Score instance);
    partial void UpdateEvaluation_Score(Evaluation_Score instance);
    partial void DeleteEvaluation_Score(Evaluation_Score instance);
    partial void InsertMembershipLINQ(MembershipLINQ instance);
    partial void UpdateMembershipLINQ(MembershipLINQ instance);
    partial void DeleteMembershipLINQ(MembershipLINQ instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void InsertSiteStatus(SiteStatus instance);
    partial void UpdateSiteStatus(SiteStatus instance);
    partial void DeleteSiteStatus(SiteStatus instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertPOSITION(POSITION instance);
    partial void UpdatePOSITION(POSITION instance);
    partial void DeletePOSITION(POSITION instance);
    partial void InsertDEPARTMENT(DEPARTMENT instance);
    partial void UpdateDEPARTMENT(DEPARTMENT instance);
    partial void DeleteDEPARTMENT(DEPARTMENT instance);
    partial void InsertAGENCY(AGENCY instance);
    partial void UpdateAGENCY(AGENCY instance);
    partial void DeleteAGENCY(AGENCY instance);
    partial void InsertLeaveType(LeaveType instance);
    partial void UpdateLeaveType(LeaveType instance);
    partial void DeleteLeaveType(LeaveType instance);
    partial void InsertLeaveTypeUser(LeaveTypeUser instance);
    partial void UpdateLeaveTypeUser(LeaveTypeUser instance);
    partial void DeleteLeaveTypeUser(LeaveTypeUser instance);
    partial void InsertLeaveTransaction(LeaveTransaction instance);
    partial void UpdateLeaveTransaction(LeaveTransaction instance);
    partial void DeleteLeaveTransaction(LeaveTransaction instance);
    partial void InsertSELF_EVALUATION(SELF_EVALUATION instance);
    partial void UpdateSELF_EVALUATION(SELF_EVALUATION instance);
    partial void DeleteSELF_EVALUATION(SELF_EVALUATION instance);
    partial void InsertEvaluation_Self(Evaluation_Self instance);
    partial void UpdateEvaluation_Self(Evaluation_Self instance);
    partial void DeleteEvaluation_Self(Evaluation_Self instance);
    #endregion
		
		public eHRISContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbAMS"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public eHRISContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public eHRISContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public eHRISContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public eHRISContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationLINQ> EvaluationLINQs
		{
			get
			{
				return this.GetTable<EvaluationLINQ>();
			}
		}
		
		public System.Data.Linq.Table<Evaluation_Score> Evaluation_Scores
		{
			get
			{
				return this.GetTable<Evaluation_Score>();
			}
		}
		
		public System.Data.Linq.Table<MembershipLINQ> MembershipLINQs
		{
			get
			{
				return this.GetTable<MembershipLINQ>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<SiteStatus> SiteStatus
		{
			get
			{
				return this.GetTable<SiteStatus>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<POSITION> POSITIONs
		{
			get
			{
				return this.GetTable<POSITION>();
			}
		}
		
		public System.Data.Linq.Table<DEPARTMENT> DEPARTMENTs
		{
			get
			{
				return this.GetTable<DEPARTMENT>();
			}
		}
		
		public System.Data.Linq.Table<AGENCY> AGENCies
		{
			get
			{
				return this.GetTable<AGENCY>();
			}
		}
		
		public System.Data.Linq.Table<LeaveType> LeaveTypes
		{
			get
			{
				return this.GetTable<LeaveType>();
			}
		}
		
		public System.Data.Linq.Table<LeaveTypeUser> LeaveTypeUsers
		{
			get
			{
				return this.GetTable<LeaveTypeUser>();
			}
		}
		
		public System.Data.Linq.Table<LeaveTransaction> LeaveTransactions
		{
			get
			{
				return this.GetTable<LeaveTransaction>();
			}
		}
		
		public System.Data.Linq.Table<SELF_EVALUATION> SELF_EVALUATIONs
		{
			get
			{
				return this.GetTable<SELF_EVALUATION>();
			}
		}
		
		public System.Data.Linq.Table<Evaluation_Self> Evaluation_Selfs
		{
			get
			{
				return this.GetTable<Evaluation_Self>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleId;
		
		private System.Guid _ApplicationId;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntitySet<POSITION> _POSITIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._POSITIONs = new EntitySet<POSITION>(new Action<POSITION>(this.attach_POSITIONs), new Action<POSITION>(this.detach_POSITIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_POSITION", Storage="_POSITIONs", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<POSITION> POSITIONs
		{
			get
			{
				return this._POSITIONs;
			}
			set
			{
				this._POSITIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_POSITIONs(POSITION entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_POSITIONs(POSITION entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluation")]
	public partial class EvaluationLINQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _EvaluationType;
		
		private System.Nullable<System.Guid> _EvaluatedById;
		
		private string _DateEvaluated;
		
		private System.Nullable<decimal> _TotalScore;
		
		private string _RemarksName;
		
		private string _ImpUnacceptable;
		
		private string _ImpFallShort;
		
		private string _ImpEffective;
		
		private string _ImpHighlyEffective;
		
		private string _ImpExceptional;
		
		private string _Recommendation;
		
		private string _NeedImprovement;
		
		private System.Nullable<System.Guid> _ApprovedByManagerId;
		
		private System.Nullable<System.Guid> _ApprovedByHRId;
		
		private string _EmployeesCreativeContribution;
		
		private string _EmployeesNewSkills;
		
		private string _EmployeesStrength;
		
		private string _EmployeesImprovement;
		
		private string _EmployeesChanges;
		
		private string _EmployeesPersonalGoals;
		
		private string _EmployeesRecommendation;
		
		private string _Agency;
		
		private System.Nullable<decimal> _Section1A;
		
		private System.Nullable<decimal> _Section1B;
		
		private System.Nullable<decimal> _Section1C;
		
		private System.Nullable<decimal> _Section2A;
		
		private System.Nullable<decimal> _Section2B;
		
		private System.Nullable<decimal> _Section2C;
		
		private System.Nullable<decimal> _Section3A;
		
		private System.Nullable<decimal> _Section3B;
		
		private System.Nullable<decimal> _Section3C;
		
		private System.Nullable<decimal> _Section3D;
		
		private System.Nullable<decimal> _Section3E;
		
		private System.Nullable<decimal> _Section3F;
		
		private string _CommentSection1A;
		
		private string _CommentSection1B;
		
		private string _CommentSection1C;
		
		private string _CommentSection2A;
		
		private string _CommentSection2B;
		
		private string _CommentSection2C;
		
		private string _CommentSection3A;
		
		private string _CommentSection3B;
		
		private string _CommentSection3C;
		
		private string _CommentSection3D;
		
		private string _CommentSection3E;
		
		private string _CommentSection3F;
		
		private System.Nullable<int> _DaysSick;
		
		private System.Nullable<int> _DaysTardy;
		
		private string _primeComments;
		
		private string _NextEvaluationDate;
		
		private string _EnableManagerStrength;
		
		private string _EnableNeedImprovement;
		
		private string _EnableRemarks;
		
		private EntitySet<Evaluation_Score> _Evaluation_Scores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnEvaluationTypeChanging(string value);
    partial void OnEvaluationTypeChanged();
    partial void OnEvaluatedByIdChanging(System.Nullable<System.Guid> value);
    partial void OnEvaluatedByIdChanged();
    partial void OnDateEvaluatedChanging(string value);
    partial void OnDateEvaluatedChanged();
    partial void OnTotalScoreChanging(System.Nullable<decimal> value);
    partial void OnTotalScoreChanged();
    partial void OnRemarksNameChanging(string value);
    partial void OnRemarksNameChanged();
    partial void OnImpUnacceptableChanging(string value);
    partial void OnImpUnacceptableChanged();
    partial void OnImpFallShortChanging(string value);
    partial void OnImpFallShortChanged();
    partial void OnImpEffectiveChanging(string value);
    partial void OnImpEffectiveChanged();
    partial void OnImpHighlyEffectiveChanging(string value);
    partial void OnImpHighlyEffectiveChanged();
    partial void OnImpExceptionalChanging(string value);
    partial void OnImpExceptionalChanged();
    partial void OnRecommendationChanging(string value);
    partial void OnRecommendationChanged();
    partial void OnNeedImprovementChanging(string value);
    partial void OnNeedImprovementChanged();
    partial void OnApprovedByManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnApprovedByManagerIdChanged();
    partial void OnApprovedByHRIdChanging(System.Nullable<System.Guid> value);
    partial void OnApprovedByHRIdChanged();
    partial void OnEmployeesCreativeContributionChanging(string value);
    partial void OnEmployeesCreativeContributionChanged();
    partial void OnEmployeesNewSkillsChanging(string value);
    partial void OnEmployeesNewSkillsChanged();
    partial void OnEmployeesStrengthChanging(string value);
    partial void OnEmployeesStrengthChanged();
    partial void OnEmployeesImprovementChanging(string value);
    partial void OnEmployeesImprovementChanged();
    partial void OnEmployeesChangesChanging(string value);
    partial void OnEmployeesChangesChanged();
    partial void OnEmployeesPersonalGoalsChanging(string value);
    partial void OnEmployeesPersonalGoalsChanged();
    partial void OnEmployeesRecommendationChanging(string value);
    partial void OnEmployeesRecommendationChanged();
    partial void OnAgencyChanging(string value);
    partial void OnAgencyChanged();
    partial void OnSection1AChanging(System.Nullable<decimal> value);
    partial void OnSection1AChanged();
    partial void OnSection1BChanging(System.Nullable<decimal> value);
    partial void OnSection1BChanged();
    partial void OnSection1CChanging(System.Nullable<decimal> value);
    partial void OnSection1CChanged();
    partial void OnSection2AChanging(System.Nullable<decimal> value);
    partial void OnSection2AChanged();
    partial void OnSection2BChanging(System.Nullable<decimal> value);
    partial void OnSection2BChanged();
    partial void OnSection2CChanging(System.Nullable<decimal> value);
    partial void OnSection2CChanged();
    partial void OnSection3AChanging(System.Nullable<decimal> value);
    partial void OnSection3AChanged();
    partial void OnSection3BChanging(System.Nullable<decimal> value);
    partial void OnSection3BChanged();
    partial void OnSection3CChanging(System.Nullable<decimal> value);
    partial void OnSection3CChanged();
    partial void OnSection3DChanging(System.Nullable<decimal> value);
    partial void OnSection3DChanged();
    partial void OnSection3EChanging(System.Nullable<decimal> value);
    partial void OnSection3EChanged();
    partial void OnSection3FChanging(System.Nullable<decimal> value);
    partial void OnSection3FChanged();
    partial void OnCommentSection1AChanging(string value);
    partial void OnCommentSection1AChanged();
    partial void OnCommentSection1BChanging(string value);
    partial void OnCommentSection1BChanged();
    partial void OnCommentSection1CChanging(string value);
    partial void OnCommentSection1CChanged();
    partial void OnCommentSection2AChanging(string value);
    partial void OnCommentSection2AChanged();
    partial void OnCommentSection2BChanging(string value);
    partial void OnCommentSection2BChanged();
    partial void OnCommentSection2CChanging(string value);
    partial void OnCommentSection2CChanged();
    partial void OnCommentSection3AChanging(string value);
    partial void OnCommentSection3AChanged();
    partial void OnCommentSection3BChanging(string value);
    partial void OnCommentSection3BChanged();
    partial void OnCommentSection3CChanging(string value);
    partial void OnCommentSection3CChanged();
    partial void OnCommentSection3DChanging(string value);
    partial void OnCommentSection3DChanged();
    partial void OnCommentSection3EChanging(string value);
    partial void OnCommentSection3EChanged();
    partial void OnCommentSection3FChanging(string value);
    partial void OnCommentSection3FChanged();
    partial void OnDaysSickChanging(System.Nullable<int> value);
    partial void OnDaysSickChanged();
    partial void OnDaysTardyChanging(System.Nullable<int> value);
    partial void OnDaysTardyChanged();
    partial void OnprimeCommentsChanging(string value);
    partial void OnprimeCommentsChanged();
    partial void OnNextEvaluationDateChanging(string value);
    partial void OnNextEvaluationDateChanged();
    partial void OnEnableManagerStrengthChanging(string value);
    partial void OnEnableManagerStrengthChanged();
    partial void OnEnableNeedImprovementChanging(string value);
    partial void OnEnableNeedImprovementChanged();
    partial void OnEnableRemarksChanging(string value);
    partial void OnEnableRemarksChanged();
    #endregion
		
		public EvaluationLINQ()
		{
			this._Evaluation_Scores = new EntitySet<Evaluation_Score>(new Action<Evaluation_Score>(this.attach_Evaluation_Scores), new Action<Evaluation_Score>(this.detach_Evaluation_Scores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationType", DbType="VarChar(MAX)")]
		public string EvaluationType
		{
			get
			{
				return this._EvaluationType;
			}
			set
			{
				if ((this._EvaluationType != value))
				{
					this.OnEvaluationTypeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationType = value;
					this.SendPropertyChanged("EvaluationType");
					this.OnEvaluationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatedById", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EvaluatedById
		{
			get
			{
				return this._EvaluatedById;
			}
			set
			{
				if ((this._EvaluatedById != value))
				{
					this.OnEvaluatedByIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluatedById = value;
					this.SendPropertyChanged("EvaluatedById");
					this.OnEvaluatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEvaluated", DbType="VarChar(50)")]
		public string DateEvaluated
		{
			get
			{
				return this._DateEvaluated;
			}
			set
			{
				if ((this._DateEvaluated != value))
				{
					this.OnDateEvaluatedChanging(value);
					this.SendPropertyChanging();
					this._DateEvaluated = value;
					this.SendPropertyChanged("DateEvaluated");
					this.OnDateEvaluatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarksName", DbType="VarChar(50)")]
		public string RemarksName
		{
			get
			{
				return this._RemarksName;
			}
			set
			{
				if ((this._RemarksName != value))
				{
					this.OnRemarksNameChanging(value);
					this.SendPropertyChanging();
					this._RemarksName = value;
					this.SendPropertyChanged("RemarksName");
					this.OnRemarksNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpUnacceptable", DbType="VarChar(MAX)")]
		public string ImpUnacceptable
		{
			get
			{
				return this._ImpUnacceptable;
			}
			set
			{
				if ((this._ImpUnacceptable != value))
				{
					this.OnImpUnacceptableChanging(value);
					this.SendPropertyChanging();
					this._ImpUnacceptable = value;
					this.SendPropertyChanged("ImpUnacceptable");
					this.OnImpUnacceptableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpFallShort", DbType="VarChar(MAX)")]
		public string ImpFallShort
		{
			get
			{
				return this._ImpFallShort;
			}
			set
			{
				if ((this._ImpFallShort != value))
				{
					this.OnImpFallShortChanging(value);
					this.SendPropertyChanging();
					this._ImpFallShort = value;
					this.SendPropertyChanged("ImpFallShort");
					this.OnImpFallShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpEffective", DbType="VarChar(MAX)")]
		public string ImpEffective
		{
			get
			{
				return this._ImpEffective;
			}
			set
			{
				if ((this._ImpEffective != value))
				{
					this.OnImpEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ImpEffective = value;
					this.SendPropertyChanged("ImpEffective");
					this.OnImpEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpHighlyEffective", DbType="VarChar(MAX)")]
		public string ImpHighlyEffective
		{
			get
			{
				return this._ImpHighlyEffective;
			}
			set
			{
				if ((this._ImpHighlyEffective != value))
				{
					this.OnImpHighlyEffectiveChanging(value);
					this.SendPropertyChanging();
					this._ImpHighlyEffective = value;
					this.SendPropertyChanged("ImpHighlyEffective");
					this.OnImpHighlyEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpExceptional", DbType="VarChar(MAX)")]
		public string ImpExceptional
		{
			get
			{
				return this._ImpExceptional;
			}
			set
			{
				if ((this._ImpExceptional != value))
				{
					this.OnImpExceptionalChanging(value);
					this.SendPropertyChanging();
					this._ImpExceptional = value;
					this.SendPropertyChanged("ImpExceptional");
					this.OnImpExceptionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recommendation", DbType="VarChar(MAX)")]
		public string Recommendation
		{
			get
			{
				return this._Recommendation;
			}
			set
			{
				if ((this._Recommendation != value))
				{
					this.OnRecommendationChanging(value);
					this.SendPropertyChanging();
					this._Recommendation = value;
					this.SendPropertyChanged("Recommendation");
					this.OnRecommendationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedImprovement", DbType="VarChar(MAX)")]
		public string NeedImprovement
		{
			get
			{
				return this._NeedImprovement;
			}
			set
			{
				if ((this._NeedImprovement != value))
				{
					this.OnNeedImprovementChanging(value);
					this.SendPropertyChanging();
					this._NeedImprovement = value;
					this.SendPropertyChanged("NeedImprovement");
					this.OnNeedImprovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByManagerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApprovedByManagerId
		{
			get
			{
				return this._ApprovedByManagerId;
			}
			set
			{
				if ((this._ApprovedByManagerId != value))
				{
					this.OnApprovedByManagerIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByManagerId = value;
					this.SendPropertyChanged("ApprovedByManagerId");
					this.OnApprovedByManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByHRId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApprovedByHRId
		{
			get
			{
				return this._ApprovedByHRId;
			}
			set
			{
				if ((this._ApprovedByHRId != value))
				{
					this.OnApprovedByHRIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByHRId = value;
					this.SendPropertyChanged("ApprovedByHRId");
					this.OnApprovedByHRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesCreativeContribution", DbType="VarChar(MAX)")]
		public string EmployeesCreativeContribution
		{
			get
			{
				return this._EmployeesCreativeContribution;
			}
			set
			{
				if ((this._EmployeesCreativeContribution != value))
				{
					this.OnEmployeesCreativeContributionChanging(value);
					this.SendPropertyChanging();
					this._EmployeesCreativeContribution = value;
					this.SendPropertyChanged("EmployeesCreativeContribution");
					this.OnEmployeesCreativeContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesNewSkills", DbType="VarChar(MAX)")]
		public string EmployeesNewSkills
		{
			get
			{
				return this._EmployeesNewSkills;
			}
			set
			{
				if ((this._EmployeesNewSkills != value))
				{
					this.OnEmployeesNewSkillsChanging(value);
					this.SendPropertyChanging();
					this._EmployeesNewSkills = value;
					this.SendPropertyChanged("EmployeesNewSkills");
					this.OnEmployeesNewSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesStrength", DbType="VarChar(MAX)")]
		public string EmployeesStrength
		{
			get
			{
				return this._EmployeesStrength;
			}
			set
			{
				if ((this._EmployeesStrength != value))
				{
					this.OnEmployeesStrengthChanging(value);
					this.SendPropertyChanging();
					this._EmployeesStrength = value;
					this.SendPropertyChanged("EmployeesStrength");
					this.OnEmployeesStrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesImprovement", DbType="VarChar(MAX)")]
		public string EmployeesImprovement
		{
			get
			{
				return this._EmployeesImprovement;
			}
			set
			{
				if ((this._EmployeesImprovement != value))
				{
					this.OnEmployeesImprovementChanging(value);
					this.SendPropertyChanging();
					this._EmployeesImprovement = value;
					this.SendPropertyChanged("EmployeesImprovement");
					this.OnEmployeesImprovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesChanges", DbType="VarChar(MAX)")]
		public string EmployeesChanges
		{
			get
			{
				return this._EmployeesChanges;
			}
			set
			{
				if ((this._EmployeesChanges != value))
				{
					this.OnEmployeesChangesChanging(value);
					this.SendPropertyChanging();
					this._EmployeesChanges = value;
					this.SendPropertyChanged("EmployeesChanges");
					this.OnEmployeesChangesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesPersonalGoals", DbType="VarChar(MAX)")]
		public string EmployeesPersonalGoals
		{
			get
			{
				return this._EmployeesPersonalGoals;
			}
			set
			{
				if ((this._EmployeesPersonalGoals != value))
				{
					this.OnEmployeesPersonalGoalsChanging(value);
					this.SendPropertyChanging();
					this._EmployeesPersonalGoals = value;
					this.SendPropertyChanged("EmployeesPersonalGoals");
					this.OnEmployeesPersonalGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesRecommendation", DbType="VarChar(MAX)")]
		public string EmployeesRecommendation
		{
			get
			{
				return this._EmployeesRecommendation;
			}
			set
			{
				if ((this._EmployeesRecommendation != value))
				{
					this.OnEmployeesRecommendationChanging(value);
					this.SendPropertyChanging();
					this._EmployeesRecommendation = value;
					this.SendPropertyChanged("EmployeesRecommendation");
					this.OnEmployeesRecommendationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agency", DbType="VarChar(MAX)")]
		public string Agency
		{
			get
			{
				return this._Agency;
			}
			set
			{
				if ((this._Agency != value))
				{
					this.OnAgencyChanging(value);
					this.SendPropertyChanging();
					this._Agency = value;
					this.SendPropertyChanged("Agency");
					this.OnAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section1A", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section1A
		{
			get
			{
				return this._Section1A;
			}
			set
			{
				if ((this._Section1A != value))
				{
					this.OnSection1AChanging(value);
					this.SendPropertyChanging();
					this._Section1A = value;
					this.SendPropertyChanged("Section1A");
					this.OnSection1AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section1B", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section1B
		{
			get
			{
				return this._Section1B;
			}
			set
			{
				if ((this._Section1B != value))
				{
					this.OnSection1BChanging(value);
					this.SendPropertyChanging();
					this._Section1B = value;
					this.SendPropertyChanged("Section1B");
					this.OnSection1BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section1C", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section1C
		{
			get
			{
				return this._Section1C;
			}
			set
			{
				if ((this._Section1C != value))
				{
					this.OnSection1CChanging(value);
					this.SendPropertyChanging();
					this._Section1C = value;
					this.SendPropertyChanged("Section1C");
					this.OnSection1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section2A", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section2A
		{
			get
			{
				return this._Section2A;
			}
			set
			{
				if ((this._Section2A != value))
				{
					this.OnSection2AChanging(value);
					this.SendPropertyChanging();
					this._Section2A = value;
					this.SendPropertyChanged("Section2A");
					this.OnSection2AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section2B", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section2B
		{
			get
			{
				return this._Section2B;
			}
			set
			{
				if ((this._Section2B != value))
				{
					this.OnSection2BChanging(value);
					this.SendPropertyChanging();
					this._Section2B = value;
					this.SendPropertyChanged("Section2B");
					this.OnSection2BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section2C", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section2C
		{
			get
			{
				return this._Section2C;
			}
			set
			{
				if ((this._Section2C != value))
				{
					this.OnSection2CChanging(value);
					this.SendPropertyChanging();
					this._Section2C = value;
					this.SendPropertyChanged("Section2C");
					this.OnSection2CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section3A", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section3A
		{
			get
			{
				return this._Section3A;
			}
			set
			{
				if ((this._Section3A != value))
				{
					this.OnSection3AChanging(value);
					this.SendPropertyChanging();
					this._Section3A = value;
					this.SendPropertyChanged("Section3A");
					this.OnSection3AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section3B", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section3B
		{
			get
			{
				return this._Section3B;
			}
			set
			{
				if ((this._Section3B != value))
				{
					this.OnSection3BChanging(value);
					this.SendPropertyChanging();
					this._Section3B = value;
					this.SendPropertyChanged("Section3B");
					this.OnSection3BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section3C", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section3C
		{
			get
			{
				return this._Section3C;
			}
			set
			{
				if ((this._Section3C != value))
				{
					this.OnSection3CChanging(value);
					this.SendPropertyChanging();
					this._Section3C = value;
					this.SendPropertyChanged("Section3C");
					this.OnSection3CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section3D", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section3D
		{
			get
			{
				return this._Section3D;
			}
			set
			{
				if ((this._Section3D != value))
				{
					this.OnSection3DChanging(value);
					this.SendPropertyChanging();
					this._Section3D = value;
					this.SendPropertyChanged("Section3D");
					this.OnSection3DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section3E", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section3E
		{
			get
			{
				return this._Section3E;
			}
			set
			{
				if ((this._Section3E != value))
				{
					this.OnSection3EChanging(value);
					this.SendPropertyChanging();
					this._Section3E = value;
					this.SendPropertyChanged("Section3E");
					this.OnSection3EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section3F", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Section3F
		{
			get
			{
				return this._Section3F;
			}
			set
			{
				if ((this._Section3F != value))
				{
					this.OnSection3FChanging(value);
					this.SendPropertyChanging();
					this._Section3F = value;
					this.SendPropertyChanged("Section3F");
					this.OnSection3FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection1A", DbType="VarChar(MAX)")]
		public string CommentSection1A
		{
			get
			{
				return this._CommentSection1A;
			}
			set
			{
				if ((this._CommentSection1A != value))
				{
					this.OnCommentSection1AChanging(value);
					this.SendPropertyChanging();
					this._CommentSection1A = value;
					this.SendPropertyChanged("CommentSection1A");
					this.OnCommentSection1AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection1B", DbType="VarChar(MAX)")]
		public string CommentSection1B
		{
			get
			{
				return this._CommentSection1B;
			}
			set
			{
				if ((this._CommentSection1B != value))
				{
					this.OnCommentSection1BChanging(value);
					this.SendPropertyChanging();
					this._CommentSection1B = value;
					this.SendPropertyChanged("CommentSection1B");
					this.OnCommentSection1BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection1C", DbType="VarChar(MAX)")]
		public string CommentSection1C
		{
			get
			{
				return this._CommentSection1C;
			}
			set
			{
				if ((this._CommentSection1C != value))
				{
					this.OnCommentSection1CChanging(value);
					this.SendPropertyChanging();
					this._CommentSection1C = value;
					this.SendPropertyChanged("CommentSection1C");
					this.OnCommentSection1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection2A", DbType="VarChar(MAX)")]
		public string CommentSection2A
		{
			get
			{
				return this._CommentSection2A;
			}
			set
			{
				if ((this._CommentSection2A != value))
				{
					this.OnCommentSection2AChanging(value);
					this.SendPropertyChanging();
					this._CommentSection2A = value;
					this.SendPropertyChanged("CommentSection2A");
					this.OnCommentSection2AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection2B", DbType="VarChar(MAX)")]
		public string CommentSection2B
		{
			get
			{
				return this._CommentSection2B;
			}
			set
			{
				if ((this._CommentSection2B != value))
				{
					this.OnCommentSection2BChanging(value);
					this.SendPropertyChanging();
					this._CommentSection2B = value;
					this.SendPropertyChanged("CommentSection2B");
					this.OnCommentSection2BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection2C", DbType="VarChar(MAX)")]
		public string CommentSection2C
		{
			get
			{
				return this._CommentSection2C;
			}
			set
			{
				if ((this._CommentSection2C != value))
				{
					this.OnCommentSection2CChanging(value);
					this.SendPropertyChanging();
					this._CommentSection2C = value;
					this.SendPropertyChanged("CommentSection2C");
					this.OnCommentSection2CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection3A", DbType="VarChar(MAX)")]
		public string CommentSection3A
		{
			get
			{
				return this._CommentSection3A;
			}
			set
			{
				if ((this._CommentSection3A != value))
				{
					this.OnCommentSection3AChanging(value);
					this.SendPropertyChanging();
					this._CommentSection3A = value;
					this.SendPropertyChanged("CommentSection3A");
					this.OnCommentSection3AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection3B", DbType="VarChar(MAX)")]
		public string CommentSection3B
		{
			get
			{
				return this._CommentSection3B;
			}
			set
			{
				if ((this._CommentSection3B != value))
				{
					this.OnCommentSection3BChanging(value);
					this.SendPropertyChanging();
					this._CommentSection3B = value;
					this.SendPropertyChanged("CommentSection3B");
					this.OnCommentSection3BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection3C", DbType="VarChar(MAX)")]
		public string CommentSection3C
		{
			get
			{
				return this._CommentSection3C;
			}
			set
			{
				if ((this._CommentSection3C != value))
				{
					this.OnCommentSection3CChanging(value);
					this.SendPropertyChanging();
					this._CommentSection3C = value;
					this.SendPropertyChanged("CommentSection3C");
					this.OnCommentSection3CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection3D", DbType="VarChar(MAX)")]
		public string CommentSection3D
		{
			get
			{
				return this._CommentSection3D;
			}
			set
			{
				if ((this._CommentSection3D != value))
				{
					this.OnCommentSection3DChanging(value);
					this.SendPropertyChanging();
					this._CommentSection3D = value;
					this.SendPropertyChanged("CommentSection3D");
					this.OnCommentSection3DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection3E", DbType="VarChar(MAX)")]
		public string CommentSection3E
		{
			get
			{
				return this._CommentSection3E;
			}
			set
			{
				if ((this._CommentSection3E != value))
				{
					this.OnCommentSection3EChanging(value);
					this.SendPropertyChanging();
					this._CommentSection3E = value;
					this.SendPropertyChanged("CommentSection3E");
					this.OnCommentSection3EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentSection3F", DbType="VarChar(MAX)")]
		public string CommentSection3F
		{
			get
			{
				return this._CommentSection3F;
			}
			set
			{
				if ((this._CommentSection3F != value))
				{
					this.OnCommentSection3FChanging(value);
					this.SendPropertyChanging();
					this._CommentSection3F = value;
					this.SendPropertyChanged("CommentSection3F");
					this.OnCommentSection3FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysSick", DbType="Int")]
		public System.Nullable<int> DaysSick
		{
			get
			{
				return this._DaysSick;
			}
			set
			{
				if ((this._DaysSick != value))
				{
					this.OnDaysSickChanging(value);
					this.SendPropertyChanging();
					this._DaysSick = value;
					this.SendPropertyChanged("DaysSick");
					this.OnDaysSickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysTardy", DbType="Int")]
		public System.Nullable<int> DaysTardy
		{
			get
			{
				return this._DaysTardy;
			}
			set
			{
				if ((this._DaysTardy != value))
				{
					this.OnDaysTardyChanging(value);
					this.SendPropertyChanging();
					this._DaysTardy = value;
					this.SendPropertyChanged("DaysTardy");
					this.OnDaysTardyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primeComments", DbType="VarChar(MAX)")]
		public string primeComments
		{
			get
			{
				return this._primeComments;
			}
			set
			{
				if ((this._primeComments != value))
				{
					this.OnprimeCommentsChanging(value);
					this.SendPropertyChanging();
					this._primeComments = value;
					this.SendPropertyChanged("primeComments");
					this.OnprimeCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextEvaluationDate", DbType="VarChar(50)")]
		public string NextEvaluationDate
		{
			get
			{
				return this._NextEvaluationDate;
			}
			set
			{
				if ((this._NextEvaluationDate != value))
				{
					this.OnNextEvaluationDateChanging(value);
					this.SendPropertyChanging();
					this._NextEvaluationDate = value;
					this.SendPropertyChanged("NextEvaluationDate");
					this.OnNextEvaluationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableManagerStrength", DbType="VarChar(MAX)")]
		public string EnableManagerStrength
		{
			get
			{
				return this._EnableManagerStrength;
			}
			set
			{
				if ((this._EnableManagerStrength != value))
				{
					this.OnEnableManagerStrengthChanging(value);
					this.SendPropertyChanging();
					this._EnableManagerStrength = value;
					this.SendPropertyChanged("EnableManagerStrength");
					this.OnEnableManagerStrengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableNeedImprovement", DbType="VarChar(MAX)")]
		public string EnableNeedImprovement
		{
			get
			{
				return this._EnableNeedImprovement;
			}
			set
			{
				if ((this._EnableNeedImprovement != value))
				{
					this.OnEnableNeedImprovementChanging(value);
					this.SendPropertyChanging();
					this._EnableNeedImprovement = value;
					this.SendPropertyChanged("EnableNeedImprovement");
					this.OnEnableNeedImprovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableRemarks", DbType="VarChar(MAX)")]
		public string EnableRemarks
		{
			get
			{
				return this._EnableRemarks;
			}
			set
			{
				if ((this._EnableRemarks != value))
				{
					this.OnEnableRemarksChanging(value);
					this.SendPropertyChanging();
					this._EnableRemarks = value;
					this.SendPropertyChanged("EnableRemarks");
					this.OnEnableRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationLINQ_Evaluation_Score", Storage="_Evaluation_Scores", ThisKey="Id", OtherKey="EvaluationId")]
		public EntitySet<Evaluation_Score> Evaluation_Scores
		{
			get
			{
				return this._Evaluation_Scores;
			}
			set
			{
				this._Evaluation_Scores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluation_Scores(Evaluation_Score entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationLINQ = this;
		}
		
		private void detach_Evaluation_Scores(Evaluation_Score entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationLINQ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluation_Score")]
	public partial class Evaluation_Score : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EvaluationId;
		
		private System.Nullable<int> _CompetenceCatId;
		
		private System.Nullable<decimal> _Rating;
		
		private System.Nullable<int> _CompetenceCatQId;
		
		private System.Nullable<decimal> _StaffRating;
		
		private System.Nullable<decimal> _EvaluatorRating;
		
		private System.Nullable<decimal> _TotalRating;
		
		private string _Remarks;
		
		private EntityRef<EvaluationLINQ> _EvaluationLINQ;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationIdChanging(System.Nullable<int> value);
    partial void OnEvaluationIdChanged();
    partial void OnCompetenceCatIdChanging(System.Nullable<int> value);
    partial void OnCompetenceCatIdChanged();
    partial void OnRatingChanging(System.Nullable<decimal> value);
    partial void OnRatingChanged();
    partial void OnCompetenceCatQIdChanging(System.Nullable<int> value);
    partial void OnCompetenceCatQIdChanged();
    partial void OnStaffRatingChanging(System.Nullable<decimal> value);
    partial void OnStaffRatingChanged();
    partial void OnEvaluatorRatingChanging(System.Nullable<decimal> value);
    partial void OnEvaluatorRatingChanged();
    partial void OnTotalRatingChanging(System.Nullable<decimal> value);
    partial void OnTotalRatingChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public Evaluation_Score()
		{
			this._EvaluationLINQ = default(EntityRef<EvaluationLINQ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationId", DbType="Int")]
		public System.Nullable<int> EvaluationId
		{
			get
			{
				return this._EvaluationId;
			}
			set
			{
				if ((this._EvaluationId != value))
				{
					if (this._EvaluationLINQ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationId = value;
					this.SendPropertyChanged("EvaluationId");
					this.OnEvaluationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetenceCatId", DbType="Int")]
		public System.Nullable<int> CompetenceCatId
		{
			get
			{
				return this._CompetenceCatId;
			}
			set
			{
				if ((this._CompetenceCatId != value))
				{
					this.OnCompetenceCatIdChanging(value);
					this.SendPropertyChanging();
					this._CompetenceCatId = value;
					this.SendPropertyChanged("CompetenceCatId");
					this.OnCompetenceCatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetenceCatQId", DbType="Int")]
		public System.Nullable<int> CompetenceCatQId
		{
			get
			{
				return this._CompetenceCatQId;
			}
			set
			{
				if ((this._CompetenceCatQId != value))
				{
					this.OnCompetenceCatQIdChanging(value);
					this.SendPropertyChanging();
					this._CompetenceCatQId = value;
					this.SendPropertyChanged("CompetenceCatQId");
					this.OnCompetenceCatQIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffRating", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> StaffRating
		{
			get
			{
				return this._StaffRating;
			}
			set
			{
				if ((this._StaffRating != value))
				{
					this.OnStaffRatingChanging(value);
					this.SendPropertyChanging();
					this._StaffRating = value;
					this.SendPropertyChanged("StaffRating");
					this.OnStaffRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatorRating", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> EvaluatorRating
		{
			get
			{
				return this._EvaluatorRating;
			}
			set
			{
				if ((this._EvaluatorRating != value))
				{
					this.OnEvaluatorRatingChanging(value);
					this.SendPropertyChanging();
					this._EvaluatorRating = value;
					this.SendPropertyChanged("EvaluatorRating");
					this.OnEvaluatorRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRating", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalRating
		{
			get
			{
				return this._TotalRating;
			}
			set
			{
				if ((this._TotalRating != value))
				{
					this.OnTotalRatingChanging(value);
					this.SendPropertyChanging();
					this._TotalRating = value;
					this.SendPropertyChanged("TotalRating");
					this.OnTotalRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationLINQ_Evaluation_Score", Storage="_EvaluationLINQ", ThisKey="EvaluationId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public EvaluationLINQ EvaluationLINQ
		{
			get
			{
				return this._EvaluationLINQ.Entity;
			}
			set
			{
				EvaluationLINQ previousValue = this._EvaluationLINQ.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationLINQ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationLINQ.Entity = null;
						previousValue.Evaluation_Scores.Remove(this);
					}
					this._EvaluationLINQ.Entity = value;
					if ((value != null))
					{
						value.Evaluation_Scores.Add(this);
						this._EvaluationId = value.Id;
					}
					else
					{
						this._EvaluationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationLINQ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memberships")]
	public partial class MembershipLINQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _ApplicationId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowsStart;
		
		private string _Comment;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public MembershipLINQ()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowsStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowsStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowsStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowsStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowsStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowsStart");
					this.OnFailedPasswordAnswerAttemptWindowsStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipLINQ_EMPLOYEE", Storage="_EMPLOYEE", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.MembershipLINQ = null;
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.MembershipLINQ = this;
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MembershipLINQ", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MembershipLINQ = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MembershipLINQ = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _ApplicationId;
		
		private string _UserName;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<MembershipLINQ> _MembershipLINQ;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public User()
		{
			this._MembershipLINQ = default(EntityRef<MembershipLINQ>);
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MembershipLINQ", Storage="_MembershipLINQ", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public MembershipLINQ MembershipLINQ
		{
			get
			{
				return this._MembershipLINQ.Entity;
			}
			set
			{
				MembershipLINQ previousValue = this._MembershipLINQ.Entity;
				if (((previousValue != value) 
							|| (this._MembershipLINQ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipLINQ.Entity = null;
						previousValue.User = null;
					}
					this._MembershipLINQ.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("MembershipLINQ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteStatus")]
	public partial class SiteStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<bool> _SetValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSetValueChanging(System.Nullable<bool> value);
    partial void OnSetValueChanged();
    #endregion
		
		public SiteStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetValue", DbType="Bit")]
		public System.Nullable<bool> SetValue
		{
			get
			{
				return this._SetValue;
			}
			set
			{
				if ((this._SetValue != value))
				{
					this.OnSetValueChanging(value);
					this.SendPropertyChanging();
					this._SetValue = value;
					this.SendPropertyChanged("SetValue");
					this.OnSetValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private int _RowId;
		
		private string _Emp_Id;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _M_Status;
		
		private string _Gender;
		
		private System.Nullable<int> _NationalityId;
		
		private string _BirthDate;
		
		private System.Nullable<int> _Age;
		
		private string _BloodType;
		
		private string _Language;
		
		private string _ContactNo;
		
		private System.Nullable<int> _PositionId;
		
		private System.Nullable<int> _Emp_Status;
		
		private string _SubUnit;
		
		private string _JoinDate;
		
		private string _Contract_SD;
		
		private string _Contract_ED;
		
		private System.Nullable<int> _AgencyId;
		
		private System.Nullable<int> _AccountStatusId;
		
		private string _DateAccountStatusModified;
		
		private EntitySet<SELF_EVALUATION> _SELF_EVALUATIONs;
		
		private EntityRef<MembershipLINQ> _MembershipLINQ;
		
		private EntityRef<POSITION> _POSITION;
		
		private EntityRef<AGENCY> _AGENCY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRowIdChanging(int value);
    partial void OnRowIdChanged();
    partial void OnEmp_IdChanging(string value);
    partial void OnEmp_IdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnM_StatusChanging(string value);
    partial void OnM_StatusChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnNationalityIdChanging(System.Nullable<int> value);
    partial void OnNationalityIdChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnPositionIdChanging(System.Nullable<int> value);
    partial void OnPositionIdChanged();
    partial void OnEmp_StatusChanging(System.Nullable<int> value);
    partial void OnEmp_StatusChanged();
    partial void OnSubUnitChanging(string value);
    partial void OnSubUnitChanged();
    partial void OnJoinDateChanging(string value);
    partial void OnJoinDateChanged();
    partial void OnContract_SDChanging(string value);
    partial void OnContract_SDChanged();
    partial void OnContract_EDChanging(string value);
    partial void OnContract_EDChanged();
    partial void OnAgencyIdChanging(System.Nullable<int> value);
    partial void OnAgencyIdChanged();
    partial void OnAccountStatusIdChanging(System.Nullable<int> value);
    partial void OnAccountStatusIdChanged();
    partial void OnDateAccountStatusModifiedChanging(string value);
    partial void OnDateAccountStatusModifiedChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._SELF_EVALUATIONs = new EntitySet<SELF_EVALUATION>(new Action<SELF_EVALUATION>(this.attach_SELF_EVALUATIONs), new Action<SELF_EVALUATION>(this.detach_SELF_EVALUATIONs));
			this._MembershipLINQ = default(EntityRef<MembershipLINQ>);
			this._POSITION = default(EntityRef<POSITION>);
			this._AGENCY = default(EntityRef<AGENCY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MembershipLINQ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RowId
		{
			get
			{
				return this._RowId;
			}
			set
			{
				if ((this._RowId != value))
				{
					this.OnRowIdChanging(value);
					this.SendPropertyChanging();
					this._RowId = value;
					this.SendPropertyChanged("RowId");
					this.OnRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Id", DbType="VarChar(MAX)")]
		public string Emp_Id
		{
			get
			{
				return this._Emp_Id;
			}
			set
			{
				if ((this._Emp_Id != value))
				{
					this.OnEmp_IdChanging(value);
					this.SendPropertyChanging();
					this._Emp_Id = value;
					this.SendPropertyChanged("Emp_Id");
					this.OnEmp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(MAX)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_Status", DbType="VarChar(50)")]
		public string M_Status
		{
			get
			{
				return this._M_Status;
			}
			set
			{
				if ((this._M_Status != value))
				{
					this.OnM_StatusChanging(value);
					this.SendPropertyChanging();
					this._M_Status = value;
					this.SendPropertyChanged("M_Status");
					this.OnM_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityId", DbType="Int")]
		public System.Nullable<int> NationalityId
		{
			get
			{
				return this._NationalityId;
			}
			set
			{
				if ((this._NationalityId != value))
				{
					this.OnNationalityIdChanging(value);
					this.SendPropertyChanging();
					this._NationalityId = value;
					this.SendPropertyChanged("NationalityId");
					this.OnNationalityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="VarChar(50)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="VarChar(50)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="VarChar(MAX)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(MAX)")]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="Int")]
		public System.Nullable<int> PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					if (this._POSITION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Status", DbType="Int")]
		public System.Nullable<int> Emp_Status
		{
			get
			{
				return this._Emp_Status;
			}
			set
			{
				if ((this._Emp_Status != value))
				{
					this.OnEmp_StatusChanging(value);
					this.SendPropertyChanging();
					this._Emp_Status = value;
					this.SendPropertyChanged("Emp_Status");
					this.OnEmp_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnit", DbType="VarChar(MAX)")]
		public string SubUnit
		{
			get
			{
				return this._SubUnit;
			}
			set
			{
				if ((this._SubUnit != value))
				{
					this.OnSubUnitChanging(value);
					this.SendPropertyChanging();
					this._SubUnit = value;
					this.SendPropertyChanged("SubUnit");
					this.OnSubUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="VarChar(50)")]
		public string JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contract_SD", DbType="VarChar(50)")]
		public string Contract_SD
		{
			get
			{
				return this._Contract_SD;
			}
			set
			{
				if ((this._Contract_SD != value))
				{
					this.OnContract_SDChanging(value);
					this.SendPropertyChanging();
					this._Contract_SD = value;
					this.SendPropertyChanged("Contract_SD");
					this.OnContract_SDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contract_ED", DbType="VarChar(50)")]
		public string Contract_ED
		{
			get
			{
				return this._Contract_ED;
			}
			set
			{
				if ((this._Contract_ED != value))
				{
					this.OnContract_EDChanging(value);
					this.SendPropertyChanging();
					this._Contract_ED = value;
					this.SendPropertyChanged("Contract_ED");
					this.OnContract_EDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="Int")]
		public System.Nullable<int> AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					if (this._AGENCY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountStatusId", DbType="Int")]
		public System.Nullable<int> AccountStatusId
		{
			get
			{
				return this._AccountStatusId;
			}
			set
			{
				if ((this._AccountStatusId != value))
				{
					this.OnAccountStatusIdChanging(value);
					this.SendPropertyChanging();
					this._AccountStatusId = value;
					this.SendPropertyChanged("AccountStatusId");
					this.OnAccountStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccountStatusModified", DbType="VarChar(50)")]
		public string DateAccountStatusModified
		{
			get
			{
				return this._DateAccountStatusModified;
			}
			set
			{
				if ((this._DateAccountStatusModified != value))
				{
					this.OnDateAccountStatusModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateAccountStatusModified = value;
					this.SendPropertyChanged("DateAccountStatusModified");
					this.OnDateAccountStatusModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SELF_EVALUATION", Storage="_SELF_EVALUATIONs", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<SELF_EVALUATION> SELF_EVALUATIONs
		{
			get
			{
				return this._SELF_EVALUATIONs;
			}
			set
			{
				this._SELF_EVALUATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipLINQ_EMPLOYEE", Storage="_MembershipLINQ", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MembershipLINQ MembershipLINQ
		{
			get
			{
				return this._MembershipLINQ.Entity;
			}
			set
			{
				MembershipLINQ previousValue = this._MembershipLINQ.Entity;
				if (((previousValue != value) 
							|| (this._MembershipLINQ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MembershipLINQ.Entity = null;
						previousValue.EMPLOYEE = null;
					}
					this._MembershipLINQ.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEE = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("MembershipLINQ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POSITION_EMPLOYEE", Storage="_POSITION", ThisKey="PositionId", OtherKey="Id", IsForeignKey=true)]
		public POSITION POSITION
		{
			get
			{
				return this._POSITION.Entity;
			}
			set
			{
				POSITION previousValue = this._POSITION.Entity;
				if (((previousValue != value) 
							|| (this._POSITION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POSITION.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._POSITION.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._PositionId = value.Id;
					}
					else
					{
						this._PositionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("POSITION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AGENCY_EMPLOYEE", Storage="_AGENCY", ThisKey="AgencyId", OtherKey="Id", IsForeignKey=true)]
		public AGENCY AGENCY
		{
			get
			{
				return this._AGENCY.Entity;
			}
			set
			{
				AGENCY previousValue = this._AGENCY.Entity;
				if (((previousValue != value) 
							|| (this._AGENCY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AGENCY.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._AGENCY.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._AgencyId = value.Id;
					}
					else
					{
						this._AgencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AGENCY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SELF_EVALUATIONs(SELF_EVALUATION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_SELF_EVALUATIONs(SELF_EVALUATION entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POSITION")]
	public partial class POSITION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Position1;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private System.Nullable<int> _DepartmentId;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPosition1Changing(string value);
    partial void OnPosition1Changed();
    partial void OnRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    #endregion
		
		public POSITION()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			this._Role = default(EntityRef<Role>);
			this._DEPARTMENT = default(EntityRef<DEPARTMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Position", Storage="_Position1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Position1
		{
			get
			{
				return this._Position1;
			}
			set
			{
				if ((this._Position1 != value))
				{
					this.OnPosition1Changing(value);
					this.SendPropertyChanging();
					this._Position1 = value;
					this.SendPropertyChanged("Position1");
					this.OnPosition1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._DEPARTMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POSITION_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="Id", OtherKey="PositionId")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_POSITION", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.POSITIONs.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.POSITIONs.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_POSITION", Storage="_DEPARTMENT", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public DEPARTMENT DEPARTMENT
		{
			get
			{
				return this._DEPARTMENT.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT.Entity = null;
						previousValue.POSITIONs.Remove(this);
					}
					this._DEPARTMENT.Entity = value;
					if ((value != null))
					{
						value.POSITIONs.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEPARTMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.POSITION = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.POSITION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPARTMENT")]
	public partial class DEPARTMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Department1;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private EntitySet<POSITION> _POSITIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartment1Changing(string value);
    partial void OnDepartment1Changed();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public DEPARTMENT()
		{
			this._POSITIONs = new EntitySet<POSITION>(new Action<POSITION>(this.attach_POSITIONs), new Action<POSITION>(this.detach_POSITIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department", Storage="_Department1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Department1
		{
			get
			{
				return this._Department1;
			}
			set
			{
				if ((this._Department1 != value))
				{
					this.OnDepartment1Changing(value);
					this.SendPropertyChanging();
					this._Department1 = value;
					this.SendPropertyChanged("Department1");
					this.OnDepartment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(MAX)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_POSITION", Storage="_POSITIONs", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<POSITION> POSITIONs
		{
			get
			{
				return this._POSITIONs;
			}
			set
			{
				this._POSITIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POSITIONs(POSITION entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = this;
		}
		
		private void detach_POSITIONs(POSITION entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AGENCY")]
	public partial class AGENCY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Agency1;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAgency1Changing(string value);
    partial void OnAgency1Changed();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public AGENCY()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Agency", Storage="_Agency1", DbType="VarChar(MAX)")]
		public string Agency1
		{
			get
			{
				return this._Agency1;
			}
			set
			{
				if ((this._Agency1 != value))
				{
					this.OnAgency1Changing(value);
					this.SendPropertyChanging();
					this._Agency1 = value;
					this.SendPropertyChanged("Agency1");
					this.OnAgency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AGENCY_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="Id", OtherKey="AgencyId")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.AGENCY = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.AGENCY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveType")]
	public partial class LeaveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LeaveName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _DefaultDays;
		
		private string _AgencyId;
		
		private EntitySet<LeaveTypeUser> _LeaveTypeUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLeaveNameChanging(string value);
    partial void OnLeaveNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnDefaultDaysChanging(string value);
    partial void OnDefaultDaysChanged();
    partial void OnAgencyIdChanging(string value);
    partial void OnAgencyIdChanged();
    #endregion
		
		public LeaveType()
		{
			this._LeaveTypeUsers = new EntitySet<LeaveTypeUser>(new Action<LeaveTypeUser>(this.attach_LeaveTypeUsers), new Action<LeaveTypeUser>(this.detach_LeaveTypeUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveName", DbType="VarChar(MAX)")]
		public string LeaveName
		{
			get
			{
				return this._LeaveName;
			}
			set
			{
				if ((this._LeaveName != value))
				{
					this.OnLeaveNameChanging(value);
					this.SendPropertyChanging();
					this._LeaveName = value;
					this.SendPropertyChanged("LeaveName");
					this.OnLeaveNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDays", DbType="VarChar(50)")]
		public string DefaultDays
		{
			get
			{
				return this._DefaultDays;
			}
			set
			{
				if ((this._DefaultDays != value))
				{
					this.OnDefaultDaysChanging(value);
					this.SendPropertyChanging();
					this._DefaultDays = value;
					this.SendPropertyChanged("DefaultDays");
					this.OnDefaultDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyId", DbType="VarChar(50)")]
		public string AgencyId
		{
			get
			{
				return this._AgencyId;
			}
			set
			{
				if ((this._AgencyId != value))
				{
					this.OnAgencyIdChanging(value);
					this.SendPropertyChanging();
					this._AgencyId = value;
					this.SendPropertyChanged("AgencyId");
					this.OnAgencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveType_LeaveTypeUser", Storage="_LeaveTypeUsers", ThisKey="Id", OtherKey="LeaveTypeId")]
		public EntitySet<LeaveTypeUser> LeaveTypeUsers
		{
			get
			{
				return this._LeaveTypeUsers;
			}
			set
			{
				this._LeaveTypeUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LeaveTypeUsers(LeaveTypeUser entity)
		{
			this.SendPropertyChanging();
			entity.LeaveType = this;
		}
		
		private void detach_LeaveTypeUsers(LeaveTypeUser entity)
		{
			this.SendPropertyChanging();
			entity.LeaveType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveTypeUser")]
	public partial class LeaveTypeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<int> _LeaveTypeId;
		
		private System.Nullable<int> _NoOfDays;
		
		private EntitySet<LeaveTransaction> _LeaveTransactions;
		
		private EntityRef<LeaveType> _LeaveType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnLeaveTypeIdChanging(System.Nullable<int> value);
    partial void OnLeaveTypeIdChanged();
    partial void OnNoOfDaysChanging(System.Nullable<int> value);
    partial void OnNoOfDaysChanged();
    #endregion
		
		public LeaveTypeUser()
		{
			this._LeaveTransactions = new EntitySet<LeaveTransaction>(new Action<LeaveTransaction>(this.attach_LeaveTransactions), new Action<LeaveTransaction>(this.detach_LeaveTransactions));
			this._LeaveType = default(EntityRef<LeaveType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int")]
		public System.Nullable<int> LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					if (this._LeaveType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfDays", DbType="Int")]
		public System.Nullable<int> NoOfDays
		{
			get
			{
				return this._NoOfDays;
			}
			set
			{
				if ((this._NoOfDays != value))
				{
					this.OnNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NoOfDays = value;
					this.SendPropertyChanged("NoOfDays");
					this.OnNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveTypeUser_LeaveTransaction", Storage="_LeaveTransactions", ThisKey="Id", OtherKey="LeaveTypeUserId")]
		public EntitySet<LeaveTransaction> LeaveTransactions
		{
			get
			{
				return this._LeaveTransactions;
			}
			set
			{
				this._LeaveTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveType_LeaveTypeUser", Storage="_LeaveType", ThisKey="LeaveTypeId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public LeaveType LeaveType
		{
			get
			{
				return this._LeaveType.Entity;
			}
			set
			{
				LeaveType previousValue = this._LeaveType.Entity;
				if (((previousValue != value) 
							|| (this._LeaveType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeaveType.Entity = null;
						previousValue.LeaveTypeUsers.Remove(this);
					}
					this._LeaveType.Entity = value;
					if ((value != null))
					{
						value.LeaveTypeUsers.Add(this);
						this._LeaveTypeId = value.Id;
					}
					else
					{
						this._LeaveTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LeaveType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LeaveTransactions(LeaveTransaction entity)
		{
			this.SendPropertyChanging();
			entity.LeaveTypeUser = this;
		}
		
		private void detach_LeaveTransactions(LeaveTransaction entity)
		{
			this.SendPropertyChanging();
			entity.LeaveTypeUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveTransaction")]
	public partial class LeaveTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _LeaveTypeUserId;
		
		private string _NumberOfDays;
		
		private string _DepartmentHeadApproval;
		
		private string _HRApproval;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Status;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.DateTime> _FiledDate;
		
		private EntityRef<LeaveTypeUser> _LeaveTypeUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLeaveTypeUserIdChanging(System.Nullable<int> value);
    partial void OnLeaveTypeUserIdChanged();
    partial void OnNumberOfDaysChanging(string value);
    partial void OnNumberOfDaysChanged();
    partial void OnDepartmentHeadApprovalChanging(string value);
    partial void OnDepartmentHeadApprovalChanged();
    partial void OnHRApprovalChanging(string value);
    partial void OnHRApprovalChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnFiledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFiledDateChanged();
    #endregion
		
		public LeaveTransaction()
		{
			this._LeaveTypeUser = default(EntityRef<LeaveTypeUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeUserId", DbType="Int")]
		public System.Nullable<int> LeaveTypeUserId
		{
			get
			{
				return this._LeaveTypeUserId;
			}
			set
			{
				if ((this._LeaveTypeUserId != value))
				{
					if (this._LeaveTypeUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveTypeUserIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeUserId = value;
					this.SendPropertyChanged("LeaveTypeUserId");
					this.OnLeaveTypeUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="VarChar(50)")]
		public string NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentHeadApproval", DbType="VarChar(50)")]
		public string DepartmentHeadApproval
		{
			get
			{
				return this._DepartmentHeadApproval;
			}
			set
			{
				if ((this._DepartmentHeadApproval != value))
				{
					this.OnDepartmentHeadApprovalChanging(value);
					this.SendPropertyChanging();
					this._DepartmentHeadApproval = value;
					this.SendPropertyChanged("DepartmentHeadApproval");
					this.OnDepartmentHeadApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HRApproval", DbType="VarChar(50)")]
		public string HRApproval
		{
			get
			{
				return this._HRApproval;
			}
			set
			{
				if ((this._HRApproval != value))
				{
					this.OnHRApprovalChanging(value);
					this.SendPropertyChanging();
					this._HRApproval = value;
					this.SendPropertyChanged("HRApproval");
					this.OnHRApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="Date")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FiledDate
		{
			get
			{
				return this._FiledDate;
			}
			set
			{
				if ((this._FiledDate != value))
				{
					this.OnFiledDateChanging(value);
					this.SendPropertyChanging();
					this._FiledDate = value;
					this.SendPropertyChanged("FiledDate");
					this.OnFiledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeaveTypeUser_LeaveTransaction", Storage="_LeaveTypeUser", ThisKey="LeaveTypeUserId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public LeaveTypeUser LeaveTypeUser
		{
			get
			{
				return this._LeaveTypeUser.Entity;
			}
			set
			{
				LeaveTypeUser previousValue = this._LeaveTypeUser.Entity;
				if (((previousValue != value) 
							|| (this._LeaveTypeUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeaveTypeUser.Entity = null;
						previousValue.LeaveTransactions.Remove(this);
					}
					this._LeaveTypeUser.Entity = value;
					if ((value != null))
					{
						value.LeaveTransactions.Add(this);
						this._LeaveTypeUserId = value.Id;
					}
					else
					{
						this._LeaveTypeUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LeaveTypeUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SELF_EVALUATION")]
	public partial class SELF_EVALUATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.Guid> _EvaluatedBy;
		
		private string _DateEvaluated;
		
		private string _Type;
		
		private EntitySet<Evaluation_Self> _Evaluation_Selfs;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnEvaluatedByChanging(System.Nullable<System.Guid> value);
    partial void OnEvaluatedByChanged();
    partial void OnDateEvaluatedChanging(string value);
    partial void OnDateEvaluatedChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SELF_EVALUATION()
		{
			this._Evaluation_Selfs = new EntitySet<Evaluation_Self>(new Action<Evaluation_Self>(this.attach_Evaluation_Selfs), new Action<Evaluation_Self>(this.detach_Evaluation_Selfs));
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EvaluatedBy
		{
			get
			{
				return this._EvaluatedBy;
			}
			set
			{
				if ((this._EvaluatedBy != value))
				{
					this.OnEvaluatedByChanging(value);
					this.SendPropertyChanging();
					this._EvaluatedBy = value;
					this.SendPropertyChanged("EvaluatedBy");
					this.OnEvaluatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEvaluated", DbType="VarChar(50)")]
		public string DateEvaluated
		{
			get
			{
				return this._DateEvaluated;
			}
			set
			{
				if ((this._DateEvaluated != value))
				{
					this.OnDateEvaluatedChanging(value);
					this.SendPropertyChanging();
					this._DateEvaluated = value;
					this.SendPropertyChanged("DateEvaluated");
					this.OnDateEvaluatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SELF_EVALUATION_Evaluation_Self", Storage="_Evaluation_Selfs", ThisKey="Id", OtherKey="EvaluationId")]
		public EntitySet<Evaluation_Self> Evaluation_Selfs
		{
			get
			{
				return this._Evaluation_Selfs;
			}
			set
			{
				this._Evaluation_Selfs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SELF_EVALUATION", Storage="_EMPLOYEE", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.SELF_EVALUATIONs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.SELF_EVALUATIONs.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluation_Selfs(Evaluation_Self entity)
		{
			this.SendPropertyChanging();
			entity.SELF_EVALUATION = this;
		}
		
		private void detach_Evaluation_Selfs(Evaluation_Self entity)
		{
			this.SendPropertyChanging();
			entity.SELF_EVALUATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluation_Self")]
	public partial class Evaluation_Self : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EvaluationId;
		
		private System.Nullable<int> _CompetenceCatQId;
		
		private System.Nullable<int> _Rating;
		
		private string _Remarks;
		
		private string _NameOfGuests;
		
		private string _RoomNos;
		
		private string _DateOfStay;
		
		private string _Situations;
		
		private string _Date;
		
		private EntityRef<SELF_EVALUATION> _SELF_EVALUATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvaluationIdChanging(System.Nullable<int> value);
    partial void OnEvaluationIdChanged();
    partial void OnCompetenceCatQIdChanging(System.Nullable<int> value);
    partial void OnCompetenceCatQIdChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnNameOfGuestsChanging(string value);
    partial void OnNameOfGuestsChanged();
    partial void OnRoomNosChanging(string value);
    partial void OnRoomNosChanged();
    partial void OnDateOfStayChanging(string value);
    partial void OnDateOfStayChanged();
    partial void OnSituationsChanging(string value);
    partial void OnSituationsChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public Evaluation_Self()
		{
			this._SELF_EVALUATION = default(EntityRef<SELF_EVALUATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationId", DbType="Int")]
		public System.Nullable<int> EvaluationId
		{
			get
			{
				return this._EvaluationId;
			}
			set
			{
				if ((this._EvaluationId != value))
				{
					if (this._SELF_EVALUATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationId = value;
					this.SendPropertyChanged("EvaluationId");
					this.OnEvaluationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetenceCatQId", DbType="Int")]
		public System.Nullable<int> CompetenceCatQId
		{
			get
			{
				return this._CompetenceCatQId;
			}
			set
			{
				if ((this._CompetenceCatQId != value))
				{
					this.OnCompetenceCatQIdChanging(value);
					this.SendPropertyChanging();
					this._CompetenceCatQId = value;
					this.SendPropertyChanged("CompetenceCatQId");
					this.OnCompetenceCatQIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfGuests", DbType="VarChar(MAX)")]
		public string NameOfGuests
		{
			get
			{
				return this._NameOfGuests;
			}
			set
			{
				if ((this._NameOfGuests != value))
				{
					this.OnNameOfGuestsChanging(value);
					this.SendPropertyChanging();
					this._NameOfGuests = value;
					this.SendPropertyChanged("NameOfGuests");
					this.OnNameOfGuestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNos", DbType="VarChar(MAX)")]
		public string RoomNos
		{
			get
			{
				return this._RoomNos;
			}
			set
			{
				if ((this._RoomNos != value))
				{
					this.OnRoomNosChanging(value);
					this.SendPropertyChanging();
					this._RoomNos = value;
					this.SendPropertyChanged("RoomNos");
					this.OnRoomNosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfStay", DbType="VarChar(50)")]
		public string DateOfStay
		{
			get
			{
				return this._DateOfStay;
			}
			set
			{
				if ((this._DateOfStay != value))
				{
					this.OnDateOfStayChanging(value);
					this.SendPropertyChanging();
					this._DateOfStay = value;
					this.SendPropertyChanged("DateOfStay");
					this.OnDateOfStayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Situations", DbType="VarChar(MAX)")]
		public string Situations
		{
			get
			{
				return this._Situations;
			}
			set
			{
				if ((this._Situations != value))
				{
					this.OnSituationsChanging(value);
					this.SendPropertyChanging();
					this._Situations = value;
					this.SendPropertyChanged("Situations");
					this.OnSituationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SELF_EVALUATION_Evaluation_Self", Storage="_SELF_EVALUATION", ThisKey="EvaluationId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public SELF_EVALUATION SELF_EVALUATION
		{
			get
			{
				return this._SELF_EVALUATION.Entity;
			}
			set
			{
				SELF_EVALUATION previousValue = this._SELF_EVALUATION.Entity;
				if (((previousValue != value) 
							|| (this._SELF_EVALUATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SELF_EVALUATION.Entity = null;
						previousValue.Evaluation_Selfs.Remove(this);
					}
					this._SELF_EVALUATION.Entity = value;
					if ((value != null))
					{
						value.Evaluation_Selfs.Add(this);
						this._EvaluationId = value.Id;
					}
					else
					{
						this._EvaluationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SELF_EVALUATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
